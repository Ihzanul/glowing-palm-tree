<h3>{{viewTitle}}</h3>

    <form action="/" method="POST" autocomplete="off">
    <input type="hidden" name="_id" value="{{mail._id}}">
        <div class="form-group">
            <label>Nomor Surat</label>
            <input type="text" class="form-control" name="mailNumber" value="{{mail.mailNumber}}">
        </div>
        <div class="form-group">
            <label>Nama</label>
            <input type="text" class="form-control" name="nama" placeholder="Nama" value="{{mail.nama}}">
            <div class="text-danger">
                {{errorNama}}
            </div>
        </div>
            <div class="form-group">
            <label>Stambuk</label>
            <input type="text" class="form-control" name="stambuk" placeholder="Stambuk" value="{{mail.stambuk}}">
            <div class="text-danger">
                {{errorStambuk}}
            </div>
        </div>
            <div class="form-group">
            <label>Semester</label>
            <input type="text" class="form-control" name="sign" placeholder="Semester" value="{{mail.sign}}"></div>
            <label>TTD</label>
            <canvas id="draw" height="350" style="border: 1px solid #ced4da; width: 100%; border-radius: 0.25rem"></canvas>
        <div class="form-group">
            <button type="submit" class="btn btn-info"><i class="fa fa-database"></i> Submit</button>
            {{!-- <a class="btn btn-secondary" href="/sign"><i class="fa fa-list-alt"></i> TTD</a> --}}
            <a class="btn btn-secondary" href="/list"><i class="fa fa-list-alt"></i> Lihat Daftar</a>
        </div>
    </form>

<script>
const canvas = document.querySelector('#draw');
const ctx = canvas.getContext('2d');
canvas.width = canvas.offsetWidth;
canvas.height = canvas.offsetHeight;
ctx.strokeStyle = '#495057';
ctx.lineJoin = 'round';
ctx.lineCap = 'round';
ctx.lineWidth = 15;
// ctx.globalCompositeOperation = 'multiply';

let isDrawing = false;
let lastX = 0;
let lastY = 0;
let direction = true;

function draw(e) {
  if (!isDrawing) return; // stop the fn from running when they are not moused down
  console.log(e);
  ctx.beginPath();
  // start from
  ctx.moveTo(lastX, lastY);
  // go to
  ctx.lineTo(e.offsetX, e.offsetY);
  ctx.stroke();
  [lastX, lastY] = [e.offsetX, e.offsetY];

  if (ctx.lineWidth >= 100 || ctx.lineWidth <= 1) {
    direction = !direction;
  }
}

canvas.addEventListener('mousedown', (e) => {
  isDrawing = true;
  [lastX, lastY] = [e.offsetX, e.offsetY];
});


canvas.addEventListener('mousemove', draw);
canvas.addEventListener('mouseup', () => isDrawing = false);
canvas.addEventListener('mouseout', () => isDrawing = false);


var dataURL = canvas.toDataURL();


</script>